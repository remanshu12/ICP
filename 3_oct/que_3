class Solution {
    public List<List<Integer>> combinationSum2(int[] arr, int target) {
         List<List<Integer>> ans=new ArrayList<>();
        List<Integer> temp=new ArrayList<>();
        Arrays.sort(arr);
        helper(0,arr,temp,ans,target);
        return ans;
    }
    public void helper(int index,int arr[],List<Integer> temp,List<List<Integer>> ans,int target){
       if(target==0){    
        ans.add(new ArrayList<>(temp));
         return;
    }
    for(int i=index;i<arr.length;i++){
        if(i>index && arr[i]==arr[i-1]){
            continue;
        }
        if(arr[i]>target){
            break;
        }
        temp.add(arr[i]);
        helper(i+1,arr,temp,ans,target-arr[i]);
        temp.remove(temp.size()-1);
    }
   


       
    }
}